# Do-it-C-
Do it! 알고리즘 코딩 테스트: C++편


배열의 특징

인덱스를 사용하여 값에 바로 접근할 수 있다.
새로운 값을 삽입하거나 특정 인덱스에 있는 값을 삭제하기 어렵다. 값을 삽입하거나 삭제하려면 해당 인덱스 주변에 있는 값을 이동시키는 과정이 필요하다.
배열의 크기는 선언할 때 지정할 수 있으며, 한번 선언하면 크기를 늘리거나 줄일 수 없다.
구조가 간단하므로 코딩 테스트에서 많이 사용한다.


리스트의 특징

인덱스가 없으므로 값에 접근하려면 Head 포인터부터 순서대로 접근해야 한다. 다시 말해 값에 접근하는 속도가 느리다.
포인터로 연결되어 있으므로 데이터를 삽입하거나 삭제하는 연산 속도가 빠르다.
선언할 때 크기를 별도로 지정하지 않아도 된다. 다시 말해 리스트의 크기는 정해져 있지 않으며, 크기가 변하기 쉬운 데이터를 다룰 때 적절하다.
포인터를 저장할 공간이 필요하므로 배열보다 구조가 복잡하다.


벡터의 특징

동적으로 원소를 추가할 수 있다. 즉, 크기가 자동으로 늘어난다.
맨 마지막 위치에 데이터를 삽입하거나 삭제할 때는 문제가 없지만 중간 데이터의 삽입 삭제는 배열과 같은 메커니즘으로 동작한다.
배열과 마찬가지로 인덱스를 이용하여 각 데이터에 직접 접근할 수 있다.
